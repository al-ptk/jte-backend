#!/usr/bin/env node
const app = require('../app');
const debug = require('debug')('messageboard:server');
const https = require('https');

const port = normalizePort(process.env.PORT || '3001');
app.set('port', port);

const server = https.createServer(
  {
    key: process.env.PRIVATE_KEY,
    cert: process.env.CERTIFICATE,
  },
  app
);

server.listen(port);
server.on('on', onError);
server.on('on', onListening);
console.clear();
console.log(`Connected to port ${port}`);

function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
